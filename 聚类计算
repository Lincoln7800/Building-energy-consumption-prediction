import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn import preprocessing
from sklearn import metrics

data = pd.read_csv('./特征聚类1.csv',encoding='gbk')
data.head()

data_notitle = data.drop('room',axis = 1)
data_scaled = preprocessing.scale(data_notitle)
X = data_scaled
scores = []
for i in range(2,18):
    km = KMeans(n_clusters=i,init='k-means++',n_init=10,max_iter=300,random_state=0)
    km.fit(X)
    scores.append(metrics.silhouette_score(X,km.labels_ ,metric='euclidean'))
    
kmodel = KMeans(n_clusters = 2, n_jobs = 4, max_iter =1000 ) #n_jobs是并行数，一般等于CPU数较好
kmodel.fit(data_scaled) #训练模型
data_scaled = pd.DataFrame(data_scaled,columns = ['mean','total','median','Upper quantile','Lower quantile','extremum','Standard deviation'])

r1 = pd.Series(kmodel.labels_).value_counts()  #统计各个类别的数目
r2 = pd.DataFrame(kmodel.cluster_centers_)     #找出聚类中心
r = pd.concat([r2, r1], axis = 1)
r.columns = list(data_scaled.columns) + [u'类别数目']
r = pd.concat([data_scaled, pd.Series(kmodel.labels_, index = data_scaled.index)], axis = 1)  #详细输出每个样本对应的类别
r.columns = list(data_scaled.columns) + [u'聚类类别']
r.head()

julei2 = pd.DataFrame()
julei2['room'] = data['room']
julei2['cluster'] = r['聚类类别']
julei2.to_excel('一阶聚类.xlsx',encoding='gbk')
